model Program {
  id         String     @id @default(uuid()) @db.Uuid
  acronym    String
  name       String
  department Department
  student    Student[]

  @@index([acronym, name])
}

enum Role {
  student
  teacher
  admin
}

model User {
  id                     String                   @id @default(uuid()) @db.Uuid
  firstName              String
  lastName               String
  email                  String                   @unique
  password               String
  avatar                 String
  role                   Role
  createdAt              DateTime?                @default(now())
  updatedAt              DateTime?                @updatedAt
  deletedAt              DateTime?
  student                Student?
  teacher                Teacher?
  // Both Teacher and student can post class discussion
  classDiscussion        ClassDiscussion[]
  ClassDiscussionComment ClassDiscussionComment[]
  ClassDiscussionReact   ClassDiscussionReact[]

  @@unique([lastName, email, firstName])
  @@index([id, email, role])
}

model Student {
  id           BigInt         @id @db.BigInt
  userId       String         @unique @db.Uuid
  user         User           @relation(fields: [userId], references: [id])
  programId    String         @db.Uuid
  program      Program        @relation(fields: [programId], references: [id])
  classStudent ClassStudent[]
}

enum Department {
  ict
  sh
  bm
  tm
  hm
  ga
  ba
}

model Teacher {
  id         String     @id @default(uuid()) @db.Uuid
  userId     String     @unique @db.Uuid
  user       User       @relation(fields: [userId], references: [id])
  department Department
  class      Class[]
}
